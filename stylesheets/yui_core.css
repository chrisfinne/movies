/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
*/
/**
 * Percents could work for IE, but for backCompat purposes, we are using keywords.
 * x-small is for IE6/7 quirks mode.
 */
body {
	font:13px/1.231 arial,helvetica,clean,sans-serif;
	*font-size:small; /* for IE */
	*font:x-small; /* for IE in quirks mode */
}

/**
 * Nudge down to get to 13px equivalent for these form elements
 */ 
select,
input,
button,
textarea {
	font:99% arial,helvetica,clean,sans-serif;
}

/**
 * To help tables remember to inherit
 */
table {
	font-size:inherit;
	font:100%;
}

/**
 * Bump up IE to get to 13px equivalent for these fixed-width elements
 */
pre,
code,
kbd,
samp,
tt {
	font-family:monospace;
	*font-size:108%;
	line-height:100%;
}/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
*/
.yui-overlay,
.yui-panel-container {
    visibility:hidden;
    position:absolute;
    z-index: 2;
}

.yui-tt {
    visibility:hidden;
    position:absolute;
    color:#333;
    background-color:#FDFFB4;
    font-family:arial,helvetica,verdana,sans-serif;
    padding:2px;
    border:1px solid #FCC90D;
    font:100% sans-serif;
    width:auto;
}

/*
    PLEASE NOTE: The <DIV> element used for a Tooltip's shadow is appended 
    to its root element via JavaScript once it has been rendered.  The 
    code that creates the shadow lives in the Tooltip's public "onRender" 
    event handler that is a prototype method of YAHOO.widget.Tooltip.  
    Implementers wishing to remove a Tooltip's shadow or add any other markup
    required for a given skin for Tooltip should override the "onRender" method.
*/

.yui-tt-shadow {
    display: none;
}

* html body.masked select {
    visibility:hidden;
}

* html div.yui-panel-container select {
    visibility:inherit;
}

* html div.drag select {
    visibility:hidden;
}

* html div.hide-select select {
    visibility:hidden;
}

.mask {
    z-index: 1; 
    display:none;
    position:absolute;
    top:0;
    left:0;
    -moz-opacity: 0.5;
    opacity:.50;
    filter: alpha(opacity=50);
    background-color:#CCC;
}

/*

There are two known issues with YAHOO.widget.Overlay (and its subclasses) that 
manifest in Gecko-based browsers on Mac OS X:

    1) Elements with scrollbars will poke through Overlay instances floating 
       above them.
    
    2) An Overlay's scrollbars and the scrollbars of its child nodes remain  
       visible when the Overlay is hidden.

To fix these bugs:

    1) The "overflow" property of an Overlay instance's root element and child 
       nodes is toggled between "hidden" and "auto" (through the application  
       and removal of the "hide-scrollbars" and "show-scrollbars" CSS classes)
       as its "visibility" configuration property is toggled between 
       "false" and "true."
    
    2) The "display" property of <SELECT> elements that are child nodes of the 
       Overlay instance's root element is set to "none" when it is hidden.

PLEASE NOTE:  
  
    1) The "hide-scrollbars" and "show-scrollbars" CSS classes classes are 
       applied only for Gecko on Mac OS X and are added/removed to/from the 
       Overlay's root HTML element (DIV) via the "hideMacGeckoScrollbars" and 
       "showMacGeckoScrollbars" methods of YAHOO.widget.Overlay.
    
    2) There may be instances where the CSS for a web page or application 
       contains style rules whose specificity override the rules implemented by 
       the Container CSS files to fix this bug.  In such cases, is necessary to 
       leverage the provided "hide-scrollbars" and "show-scrollbars" classes to 
       write custom style rules to guard against this bug.

** For more information on this issue, see:

   + https://bugzilla.mozilla.org/show_bug.cgi?id=187435
   + SourceForge bug #1723530

*/

.hide-scrollbars,
.hide-scrollbars * {

    overflow: hidden;

}

.hide-scrollbars select {

    display: none;

}

.show-scrollbars {

    overflow: auto;

}

.yui-panel-container.show-scrollbars {

    overflow: visible;

}

.yui-panel-container.show-scrollbars .underlay {

    overflow: auto;

}

.yui-panel-container.focused {

}


/* Panel underlay styles */

.yui-panel-container .underlay {

    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

}

.yui-panel-container.matte {

    padding: 3px;
    background-color: #fff;

}

.yui-panel-container.shadow .underlay {

    top: 3px;
    bottom: -3px;
    right: -3px;
    left: 3px;
    background-color: #000;
    opacity: .12;
    filter: alpha(opacity=12);  /* For IE */

}

/* 
   Workaround for Safari 2.x - the yui-force-redraw class is applied, and then removed when
   the Panel's content changes, to force Safari 2.x to redraw the underlay.
   We attempt to choose a CSS property which has no visual impact when added,
   removed, but still causes Safari to redraw
*/
.yui-panel-container.shadow .underlay.yui-force-redraw {
    padding-bottom: 1px;
}

.yui-effect-fade .underlay {
    display:none;
}

.yui-panel {
    visibility:hidden;
    border-collapse:separate;
    position:relative;
    left:0;
    top:0;
    font:1em Arial;
    background-color:#FFF;
    border:1px solid #000;
    z-index:1;
    overflow:hidden;
}

.yui-panel .hd {
    background-color:#3d77cb;
    color:#FFF;
    font-size:100%;
    line-height:100%;
    border:1px solid #FFF;
    border-bottom:1px solid #000;
    font-weight:bold;
    padding:4px;
    white-space:nowrap;
}

.yui-panel .bd {
    overflow:hidden;
    padding:4px;
}

.yui-panel .bd p {
    margin:0 0 1em;
}

.yui-panel .container-close {
    position:absolute;
    top:5px;
    right:4px;
    z-index:6;
    height:12px;
    width:12px;
    margin:0px;
    padding:0px;
    background:url(close12_1.gif) no-repeat;
    cursor:pointer;
    visibility:inherit;
    text-indent:-10000em;
    overflow:hidden;
    text-decoration:none;
}

.yui-panel .ft {
    padding:4px;
    overflow:hidden;
}

.yui-simple-dialog .bd .yui-icon {
    background-repeat:no-repeat;
    width:16px;
    height:16px;
    margin-right:10px;
    float:left;
}

.yui-simple-dialog .bd span.blckicon {
    background: url("blck16_1.gif") no-repeat;
}

.yui-simple-dialog .bd span.alrticon {
    background: url("alrt16_1.gif") no-repeat;
}

.yui-simple-dialog .bd span.hlpicon {
    background: url("hlp16_1.gif") no-repeat;
}

.yui-simple-dialog .bd span.infoicon {
    background: url("info16_1.gif") no-repeat;
}

.yui-simple-dialog .bd span.warnicon {
    background: url("warn16_1.gif") no-repeat;
}

.yui-simple-dialog .bd span.tipicon {
    background: url("tip16_1.gif") no-repeat;
}

.yui-dialog .ft, 
.yui-simple-dialog .ft {
    padding-bottom:5px;
    padding-right:5px;
    text-align:right;
}

.yui-dialog form, 
.yui-simple-dialog form {
    margin:0;
}

.button-group button {
    font:100 76% verdana;
    text-decoration:none;
    background-color: #E4E4E4;
    color: #333;
    cursor: hand;
    vertical-align: middle;
    border: 2px solid #797979;
    border-top-color:#FFF;
    border-left-color:#FFF;
    margin:2px;
    padding:2px;
}

.button-group button.default {
    font-weight:bold;
}

.button-group button:hover, 
.button-group button.hover {
    border:2px solid #90A029;
    background-color:#EBF09E;
    border-top-color:#FFF;
    border-left-color:#FFF;
}

.button-group button:active {
    border:2px solid #E4E4E4;
    background-color:#BBB;
    border-top-color:#333;
    border-left-color:#333;
}

.yui-override-padding {
    padding:0 !important;
}
/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
*/
/* default space between tabs */
.yui-navset .yui-nav li,
.yui-navset .yui-navset-top .yui-nav li,
.yui-navset .yui-navset-bottom .yui-nav li {
    margin:0 0.5em 0 0; /* horizontal tabs */
}
.yui-navset-left .yui-nav li,
.yui-navset-right .yui-nav li {
    margin:0 0 0.5em; /* vertical tabs */
}

.yui-navset .yui-content .yui-hidden {
    display:none;
}

/* default width for side tabs */
.yui-navset .yui-navset-left .yui-nav,
.yui-navset .yui-navset-right .yui-nav,
.yui-navset-left .yui-nav,
.yui-navset-right .yui-nav { width:6em; }

.yui-navset-top .yui-nav,
.yui-navset-bottom .yui-nav {
    width:auto;
}
.yui-navset .yui-navset-left,
.yui-navset-left { padding:0 0 0 6em; } /* map to nav width */
.yui-navset-right { padding:0 6em 0 0; } /* ditto */

.yui-navset-top,
.yui-navset-bottom {
    padding:auto;
}
/* core */

.yui-nav,
.yui-nav li {
    margin:0;
    padding:0;
    list-style:none;
}
.yui-navset li em { font-style:normal; }

.yui-navset {
    position:relative; /* contain absolute positioned tabs (left/right) */
    zoom:1;
}

.yui-navset .yui-content {
    zoom:1;
}

.yui-navset .yui-content:after {
    content:'';
    display:block;
    clear:both;
}

.yui-navset .yui-nav li,
.yui-navset .yui-navset-top .yui-nav li, /* in case nested */
.yui-navset .yui-navset-bottom .yui-nav li {
    display:inline-block;
    display:-moz-inline-stack;
    *display:inline; /* IE */
    vertical-align:bottom; /* safari: for overlap */
    cursor:pointer; /* gecko: due to -moz-inline-stack on anchor */
    zoom:1; /* IE: kill space between horizontal tabs */
}

.yui-navset-left .yui-nav li,
.yui-navset-right .yui-nav li {
    display:block;
}

.yui-navset .yui-nav a { position:relative; } /* IE: to allow overlap */

.yui-navset .yui-nav li a,
.yui-navset-top .yui-nav li a,
.yui-navset-bottom .yui-nav li a {
    display:block;
    display:inline-block;
    vertical-align:bottom; /* safari: for overlap */
    zoom:1;
}

.yui-navset-left .yui-nav li a,
.yui-navset-right .yui-nav li a {
    display:block;
}

.yui-navset-bottom .yui-nav li a {
    vertical-align:text-top; /* for inline overlap (reverse for Opera border bug) */
}

.yui-navset .yui-nav li a em,
.yui-navset-top .yui-nav li a em,
.yui-navset-bottom .yui-nav li a em { display:block; }

/* position left and right oriented tabs */
.yui-navset .yui-navset-left .yui-nav,
.yui-navset .yui-navset-right .yui-nav,
.yui-navset-left .yui-nav,
.yui-navset-right .yui-nav {
   position:absolute;
   z-index:1; 
}

.yui-navset-top .yui-nav,
.yui-navset-bottom .yui-nav {
    position:static;
}
.yui-navset .yui-navset-left .yui-nav,
.yui-navset-left .yui-nav { left:0; right:auto; }

.yui-navset .yui-navset-right .yui-nav,
.yui-navset-right .yui-nav { right:0; left:auto; }
/*
Copyright (c) 2008, Yahoo! Inc. All rights reserved.
Code licensed under the BSD License:
http://developer.yahoo.net/yui/license.txt
version: 2.6.0
*/
/* Menu & MenuBar styles */

.yuimenu {

    top: -999em;
    left: -999em;

}

.yuimenubar {

    position: static;

}

.yuimenu .yuimenu,
.yuimenubar .yuimenu {

    position: absolute;

}

.yuimenubar li, 
.yuimenu li {

    list-style-type: none;    

}

.yuimenubar ul, 
.yuimenu ul,
.yuimenubar li, 
.yuimenu li,
.yuimenu h6,
.yuimenubar h6 { 

    margin: 0;
    padding: 0;

}

.yuimenuitemlabel,
.yuimenubaritemlabel {

    text-align: left;
    white-space: nowrap;

}


/* 
    The following style rule trigger the "hasLayout" property in 
    IE (http://msdn2.microsoft.com/en-us/library/ms533776.aspx) for a
    MenuBar instance's <ul> element, allowing both to clear their floated 
    child <li> elements.
*/

.yuimenubar ul {

    *zoom: 1;

}


/* 
    Remove the "hasLayout" trigger for submenus of MenuBar instances as it 
    is unnecessary. 
*/

.yuimenubar .yuimenu ul {

    *zoom: normal;

}

/*
    The following style rule allows a MenuBar instance's <ul> element to clear
    its floated <li> elements in Firefox, Safari and and Opera.
*/

.yuimenubar>.bd>ul:after {

    content: ".";
    display: block;
    clear: both;
    visibility: hidden;
    height: 0;
    line-height: 0;

}

.yuimenubaritem {

    float: left;

}

.yuimenubaritemlabel,
.yuimenuitemlabel {

    display: block;

}

.yuimenuitemlabel .helptext {

    font-style: normal;
    display: block;
    
    /*
        The value for the left margin controls how much the help text is
        offset from the text of the menu item.  This value will need to 
        be customized depending on the longest text label of a menu item.
    */
    
    margin: -1em 0 0 10em;
    
}

/*
    PLEASE NOTE: The <div> element used for a menu's shadow is appended 
    to its root element via JavaScript once it has been rendered.  The 
    code that creates the shadow lives in the menu's public "onRender" 
    event handler that is a prototype method of YAHOO.widget.Menu.  
    Implementers wishing to remove a menu's shadow or add any other markup
    required for a given skin for menu should override the "onRender" method.
*/

.yui-menu-shadow {

    position: absolute;
    visibility: hidden;
    z-index: -1;

}

.yui-menu-shadow-visible {

    top: 2px;
    right: -3px;
    left: -3px;
    bottom: -3px;
    visibility: visible;

}


/*

There are two known issues with YAHOO.widget.Overlay (the superclass class of 
Menu) that manifest in Gecko-based browsers on Mac OS X:

    1) Elements with scrollbars will poke through Overlay instances floating 
       above them.
    
    2) An Overlay's scrollbars and the scrollbars of its child nodes remain  
       visible when the Overlay is hidden.

To fix these bugs in Menu (a subclass of YAHOO.widget.Overlay):

    1) The "overflow" property of a Menu instance's shadow element and child 
       nodes is toggled between "hidden" and "auto" (through the application  
       and removal of the "hide-scrollbars" and "show-scrollbars" CSS classes)
       as its "visibility" configuration property is toggled between 
       "false" and "true."
    
    2) The "display" property of <select> elements that are child nodes of the 
       Menu instance's root element is set to "none" when it is hidden.

PLEASE NOTE:  
  
    1) The "hide-scrollbars" and "show-scrollbars" CSS classes classes are 
       applied only for Gecko on Mac OS X and are added/removed to/from the 
       Overlay's root HTML element (DIV) via the "hideMacGeckoScrollbars" and 
       "showMacGeckoScrollbars" methods of YAHOO.widget.Overlay.
    
    2) There may be instances where the CSS for a web page or application 
       contains style rules whose specificity override the rules implemented by 
       the Menu CSS files to fix this bug.  In such cases, is necessary to 
       leverage the provided "hide-scrollbars" and "show-scrollbars" classes to 
       write custom style rules to guard against this bug.

** For more information on this issue, see:

   + https://bugzilla.mozilla.org/show_bug.cgi?id=187435
   + SourceForge bug #1723530

*/

.hide-scrollbars * {

	overflow: hidden;

}

.hide-scrollbars select {

	display: none;

}


/*

The following style rule (".yuimenu.show-scrollbars") overrides the 
".show-scrollbars" rule defined in container-core.css which sets the 
"overflow" property of a YAHOO.widget.Overlay instance's root HTML element to 
"auto" when it is visible.  Without this override, a Menu would have scrollbars
when one of its submenus is visible.

*/

.yuimenu.show-scrollbars,
.yuimenubar.show-scrollbars {

	overflow: visible; 

}

.yuimenu.hide-scrollbars .yui-menu-shadow,
.yuimenubar.hide-scrollbars .yui-menu-shadow {

    overflow: hidden;

}

.yuimenu.show-scrollbars .yui-menu-shadow,
.yuimenubar.show-scrollbars .yui-menu-shadow {

    overflow: auto;

}